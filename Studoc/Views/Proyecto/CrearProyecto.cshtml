@model Proyecto

@{
    ViewData["Title"] = "Crear Proyecto";
}
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Crear Proyectos</title>
    <link rel="stylesheet" href="~/css/CrearProyecto.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://kit.fontawesome.com/019078dbc4.js" crossorigin="anonymous"></script>
</head>

<h2>Crear Proyecto</h2>

<form asp-action="CreateProyecto" enctype="multipart/form-data">
    <div class="form-group">
        <label for="Nombre">Nombre:</label>
        <input type="text" class="form-control" asp-for="Nombre" />
    </div>
    <div class="form-group">
        <label for="D_Responsable">Curso:</label>
        <select class="form-control" asp-for="D_Responsable">
            <option value="D_Responsable">D_Responsable</option>
        </select>
    </div>
    <div class="form-group">
        <label for="ODS">ODS:</label>
        <select class="form-control" asp-for="ODS">
            <option value="ODS1">ODS 1</option>
            <option value="ODS2">ODS 2</option>
            <option value="ODS3">ODS 3</option>
        </select>
    </div>
    <div class="form-group">
        <label for="Semestre">Semestre:</label>
        <input type="text" class="form-control" asp-for="Semestre" />
    </div>
    <div class="form-group">
        <label for="Categoria">Categoria:</label>
        <input type="text" class="form-control" asp-for="Categoria" />
    </div>
    <div class="form-group">
        <label for="Imagen">Imagen:</label>
        <input type="file" class="form-control" name="Imagen" />
    </div>
    <div class="form-group">
        <label for="Descripcion">Descripcion:</label>
        <input type="text-area" class="form-control" asp-for="Descripcion" />
    </div>
    <div class="form-group">
        <label for="SearchUsuarios">Buscar integrantes:</label>
        <input type="text" class="form-control" id="SearchUsuarios" placeholder="Buscar integrantes..." />
    </div>
    <div class="form-group">
        <label for="SelectedUserIds">Selecciona los integrantes:</label>
        <select multiple class="form-control" name="UserIds" id="SelectedUserIds"
            asp-items="@(new SelectList(ViewBag.Usuario, "ID", "NombresApellidos"))">
        </select>
    </div>
    <ul id="userList"></ul>

    <button type="submit" class="btn btn-primary">Crear Proyecto</button>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const selectedUserIds = document.getElementById("SelectedUserIds");
        const searchUsuarios = document.getElementById("SearchUsuarios");

        searchUsuarios.addEventListener("input", function () {
            const searchTerm = searchUsuarios.value.toLowerCase();
            const options = selectedUserIds.options;

            for (let i = 0; i < options.length; i++) {
                const option = options[i];
                const optionText = option.text.toLowerCase();
                if (optionText.includes(searchTerm)) {
                    option.style.display = "";
                } else {
                    option.style.display = "none";
                }
            }
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const selectedUserIds = document.getElementById("SelectedUserIds");
        const userIdsInput = document.getElementById("UserIds");
        const addUserButton = document.getElementById("addUser");
        const removeUserButton = document.getElementById("removeUser");
        const userList = document.getElementById("userList");

        addUserButton.addEventListener("click", function () {
            const selectedOption = selectedUserIds.options[selectedUserIds.selectedIndex];
            const optionValue = selectedOption.value;

            if (optionValue) {
                const userListItem = document.createElement("li");
                userListItem.innerHTML = selectedOption.text;
                userListItem.dataset.userId = optionValue;
                userList.appendChild(userListItem);

                selectedOption.remove();
                updateUserIdsInput();
            }
        });

        removeUserButton.addEventListener("click", function () {
            const selectedUser = userList.querySelector("li[data-user-id]:last-child");

            if (selectedUser) {
                const userId = selectedUser.dataset.userId;
                const userOption = new Option(selectedUser.textContent, userId);
                selectedUserIds.appendChild(userOption);
                userList.removeChild(selectedUser);
                updateUserIdsInput();
            }
        });

        function updateUserIdsInput() {
            const userIds = Array.from(userList.querySelectorAll("li[data-user-id]")).map(li => li.dataset.userId);
            userIdsInput.value = userIds.join(",");
        }
    });
</script>
